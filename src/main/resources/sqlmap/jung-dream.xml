<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.app.jungdreamweb.mapper.JungDreamMapper">

    <!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: INCLUDE ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

    <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  QUERY  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->
    <select id="selectProduct" resultType="productInfoDTO">
        select
        <choose>
            <when test='isFirst == 1'>
                distinct product_kind,
                case
                    when exists (
                        select 1
                        from tbl_product_info as sub
                        where sub.product_kind = tbl_product_info.product_kind
                        and sub.product_sold_out = 'N'
                    ) then 'N'
                    else 'Y'
                end as product_sold_out
            </when>
            <when test='isFirst == 2'>
                distinct product_weight,
                case
                    when exists (
                        select 1
                        from tbl_product_info as sub
                        where sub.product_weight = tbl_product_info.product_weight
                        and sub.product_sold_out = 'N'
                    ) then 'N'
                    else 'Y'
                end as product_sold_out
            </when>
            <when test='isFirst == 3'>
                product_size, product_sold_out
            </when>
            <otherwise>
                product_kind, product_weight, product_size, product_price, product_sold_out
            </otherwise>
        </choose>
        from tbl_product_info
        where 1=1
        <if test='productKind != null and productKind != ""'>
            and product_kind = #{productKind}
        </if>
        <if test='productWeight != null and productWeight != ""'>
            and product_weight = #{productWeight}
        </if>
        <if test='productSize != null and productSize != ""'>
            and product_size = #{productSize}
        </if>
        order by
        <choose>
            <when test='isFirst == 1'>
                product_kind asc
            </when>
            <when test='isFirst == 2'>
                product_weight desc
            </when>
            <when test='isFirst == 3'>
                case when product_size like '특%' then 0 else 1 end
            </when>
            <otherwise>
                product_kind asc, product_weight desc, product_price desc
            </otherwise>
        </choose>
    </select>

    <select id="selectOrderCount" resultType="int">
        select count(order_id)
        from tbl_order
        where to_char(order_date, 'yyyy-mm-dd') between #{startDate} and #{endDate}
            and order_orderer_name = #{ordererName} and order_orderer_phone = #{ordererPhone}
    </select>

    <select id="selectOrderList" resultType="orderDTO">
        select order_id, order_orderer_name, order_orderer_phone, to_char(order_date, 'yyyy-mm-dd') as order_date, order_receiver_name, order_receiver_phone,
               order_address, order_address_detail, order_postcode, order_kind, order_weight, order_size, order_count, order_price, order_group_id
        from tbl_order
        where to_char(order_date, 'yyyy-mm-dd') between #{startDate} and #{endDate}
        <if test='ordererName != null and ordererName != ""'>
            and order_orderer_name = #{ordererName}
        </if>
        <if test='ordererPhone != null and ordererPhone != ""'>
            and order_orderer_phone = #{ordererPhone}
        </if>
        order by order_group_id desc, order_id asc
    </select>

    <select id="selectOrder" resultType="orderDTO">
        select order_id, order_orderer_name, order_orderer_phone, to_char(order_date, 'yyyy-mm-dd') as order_date, order_receiver_name, order_receiver_phone,
               order_address, order_address_detail, order_postcode, order_kind, order_weight, order_size, order_count, order_price, order_group_id
        from tbl_order
        where order_id = #{orderId}
    </select>

    <!-- 시퀀스 값을 증가시키는 쿼리 -->
    <select id="getNextSequenceValue" resultType="int">
        select nextval('seq_order_group')
    </select>

    <!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: INSERT :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->
    <insert id="insertOrder">
        insert into tbl_order(order_orderer_name, order_orderer_phone, order_date, order_receiver_name, order_receiver_phone, order_address,
                              order_address_detail, order_postcode, order_kind, order_weight, order_size, order_count, order_price, order_group_id)
        values(#{orderOrdererName}, #{orderOrdererPhone}, current_timestamp, #{orderReceiverName}, #{orderReceiverPhone}, #{orderAddress},
               #{orderAddressDetail}, #{orderPostcode}, #{orderKind}, #{orderWeight}, #{orderSize}, #{orderCount}, #{orderPrice}, currval('seq_order_group'))
    </insert>

    <!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: UPDATE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->
    <update id="updateOrder" parameterType="orderDTO">
        update tbl_order
        <set>
            <if test='orderOrdererName != null and orderOrdererName != ""'>
                order_orderer_name = #{orderOrdererName},
            </if>
            <if test='orderOrdererPhone != null and orderOrdererPhone != ""'>
                order_orderer_phone = #{orderOrdererPhone},
            </if>
            <if test='orderReceiverName != null and orderReceiverName != ""'>
                order_receiver_name = #{orderReceiverName},
            </if>
            <if test='orderReceiverPhone != null and orderReceiverPhone != ""'>
                order_receiver_phone = #{orderReceiverPhone},
            </if>
            <if test='orderAddress != null and orderAddress != ""'>
                order_address = #{orderAddress},
            </if>
            <if test='orderAddressDetail != null and orderAddressDetail != ""'>
                order_address_detail = #{orderAddressDetail},
            </if>
            <if test='orderPostcode != null and orderPostcode != ""'>
                order_postcode = #{orderPostcode},
            </if>
            <if test='orderKind != null and orderKind != ""'>
                order_kind = #{orderKind},
            </if>
            <if test='orderWeight != null and orderWeight != ""'>
                order_weight = #{orderWeight},
            </if>
            <if test='orderSize != null and orderSize != ""'>
                order_size = #{orderSize},
            </if>
            <if test='orderCount != null and orderCount != ""'>
                order_count = #{orderCount},
            </if>
            <if test='orderPrice != null and orderPrice != ""'>
                order_price = #{orderPrice},
            </if>
        </set>
        where order_id = #{orderId}
    </update>

</mapper>